Epoch [6000/10000], Expert Odd Loss: 3.7868
Epoch [6000/10000], Expert Even Loss: 14.0163
Epoch [7000/10000], Expert Odd Loss: 0.4727
Epoch [7000/10000], Expert Even Loss: 5.1484
Epoch [8000/10000], Expert Odd Loss: 0.0946
Epoch [8000/10000], Expert Even Loss: 0.5413
Epoch [9000/10000], Expert Odd Loss: 0.0311
Epoch [9000/10000], Expert Even Loss: 0.0098
Epoch [10000/10000], Expert Odd Loss: 0.0163
Epoch [10000/10000], Expert Even Loss: 0.0042
Test Loss: 0.0390
Prediction for [[1.0, 3.0, 5.0, 7.0, 9.0]]: 25.0245 (Used Expert Odd)
Prediction for [[2.0, 6.0, 8.0, 10.0, 4.0]]: 22.0099 (Used Expert Even)
Prediction for [[3.0, 5.0, 7.0, 9.0, 1.0]]: 25.0580 (Used Expert Odd)
Prediction for [[4.0, 6.0, 8.0, 10.0, 2.0]]: 26.0116 (Used Expert Even)
Prediction for [[5.0, 7.0, 9.0, 1.0, 3.0]]: 25.0468 (Used Expert Odd)
Prediction for [[1.0, 1.0, 1.0, 1.0, 1.0]]: 5.5872 (Used Expert Odd)
Prediction for [[2.0, 2.0, 2.0, 10.0, 4.0]]: 12.1566 (Used Expert Even)
Prediction for [[3.0, 7.0, 7.0, 7.0, 1.0]]: 25.0628 (Used Expert Odd)
Prediction for [[4.0, 6.0, 8.0, 10.0, 2.0]]: 26.0116 (Used Expert Even)
Prediction for [[5.0, 7.0, 5.0, 1.0, 5.0]]: 23.1007 (Used Expert Odd)


target_data = [
    25,  # 1 + 3 + 5 + 7 + 9
    22,  # 2 + 6 + 8 + 10 - 4
    25,  # 3 + 5 + 7 + 9 + 1
    26,  # 4 + 6 + 8 + 10 - 2
    25,  # 5 + 7 + 9 + 1 + 3
    5,   # 1 + 1 + 1 + 1 + 1
    12,  # 2 + 2 + 2 + 10 - 4
    25,  # 3 + 7 + 7 + 7 + 1
    26,  # 4 + 6 + 8 + 10 - 2
    23   # 5 + 7 + 5 + 1 + 5
]